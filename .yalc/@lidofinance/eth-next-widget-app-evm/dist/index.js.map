{"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;;;;;;;AEAA;;;;;AAeA,MAAM,yCAAmB,OAAO,MAAM,CAAC;AACvC,IAAI;AACJ,IAAI;AACJ,IAAI;AACJ,IAAI;AACJ,IAAI;AACJ,IAAI;AACJ,IAAI;AACJ,8DAA8D;AAC9D,wDAAwD;AACxD,kBAAkB;AAClB,IAAI;AAEG,MAAM,4CAA6D,CAAC,QAAU;IACnF,IAAI,CAAC,uCACH,wCAAkB,uCAAiB,MAAM,CACvC,CAAC,QAAiB,MAAM,eAAe,CAAC,QAAQ,CAAC,MAAM,EAAE,KAAK,MAAM,EAAE,KAAK;IAI/E,IAAI,CAAC,oCACH,qCAAe,uCAAiB,IAAI,CAAC,CAAC,QAAiB,MAAM,EAAE,KAAK,MAAM,YAAY;IAGxF,IAAI,CAAC,4CACH,6CAAuB,CAAC,QAAkB,CAAA;YACxC,UAAU,IAAM,CAAA,GAAA,gCAAwB,EAAE,MAAM,EAAE,EAAE,MAAM,iBAAiB,CAAC,MAAM,EAAE,GAAG,WAAW;mBAClG;QACF,CAAA;IAGF,IAAI,CAAC,gCAAU,CAAC,kCAAY,CAAC,yCAAmB;QAC9C,MAAM,YAAY,CAAA,GAAA,sBAAc,EAAE,uCAAiB;YAAC;SAAqB;QACzE,+BAAS,UAAU,MAAM;QACzB,iCAAW,UAAU,QAAQ;QAC7B,0CAAoB,UAAU,iBAAiB;IACjD,CAAC;IAED,IAAI,CAAC,kCACH,mCAAa,CAAA,GAAA,oBAAY,EAAE;gBACzB;sBACA;QACA,KAAK,MAAM,UAAU;QACrB,wBAAwB,MAAM,sBAAsB;IACtD;IAGF,IAAI,CAAC,8BACH,+BAAS,CAAA,GAAA,mBAAW,EAAE;oBACpB;QACA,aAAa,IAAI;kBACjB;2BACA;IACF;IAGF,qBAAO,gBAAC,CAAA,GAAA,kBAAW,AAAD;QAAE,QAAQ;kBAAS,MAAM,QAAQ;;AACrD;;ADxEA;;;;;ADyBO,MAAM,4CAAmD,CAAC,sBAC/D,iBAAC,CAAA,GAAA,0BAAmB,AAAD;;0BACjB,gBAAC,CAAA,GAAA,aAAK;gBAAE,eAAe,OAAO;0BAAgB,MAAM,UAAU;;0BAC9D,gBAAC,CAAA,GAAA,WAAG;0BAAG,MAAM,QAAQ;;0BACrB,gBAAC,CAAA,GAAA,aAAK;YACL,CAAC,CAAC,MAAM,qBAAqB,kBAAI,gBAAC,CAAA,GAAA,qBAAa;YAC/C,CAAC,CAAC,MAAM,aAAa,kBAAI,gBAAC,CAAA,GAAA,qBAAa;;;AAIrC,MAAM,4CAAyD,CAAC,sBACrE,gBAAC,CAAA,GAAA,yCAAc,AAAD;QAAG,GAAG,MAAM,KAAK;kBAC7B,cAAA,gBAAC,CAAA,GAAA,mBAAY,AAAD;YAAG,GAAG,MAAM,YAAY;sBAClC,cAAA,gBAAC,CAAA,GAAA,0BAAmB,AAAD;gBAAG,GAAG,MAAM,QAAQ;0BACrC,cAAA,gBAAC;oBACC,YAAY,MAAM,UAAU;oBAC5B,eAAe,OAAO;oBACtB,iBAAiB,OAAO;oBACxB,uBAAuB,OAAO;oBAC9B,eAAe,OAAO;8BAErB,MAAM,QAAQ","sources":["packages/eth/next/widget-app-evm/src/index.tsx","packages/eth/next/widget-app-evm/src/providers/index.ts","packages/eth/next/widget-app-evm/src/providers/appWagmiProvider.tsx"],"sourcesContent":["import React, { FC, PropsWithChildren, ReactNode } from 'react'\nimport { ProviderWeb3, ProviderWeb3Props } from 'reef-knot/web3-react'\n\nimport { CookiesTooltip, CookieThemeProvider, ToastContainer } from '@lidofinance/lido-ui'\nimport { Header, Main, Footer, NavigationLinkProps } from '@lidofinance/next-widget-layout'\nimport { ProviderWalletModal, ProviderWalletModalProps } from '@lidofinance/eth-ui-wallet-modal'\n\nimport { AppWagmiConfig, AppWagmiConfigProps } from './providers'\n\nexport * from './providers'\n\nexport type WidgetAppProps = {\n  navigation: ReactNode\n  headerActions?: ReactNode\n  navigationLinks?: NavigationLinkProps[] | undefined\n  disableCookiesTooltip?: boolean | undefined\n  disableToasts?: boolean | undefined\n}\n\nexport type WidgetAppEVMProps = WidgetAppProps & {\n  wagmi: AppWagmiConfigProps\n  providerWeb3: ProviderWeb3Props\n  reefKnot: ProviderWalletModalProps\n}\n\nexport const WidgetApp: FC<PropsWithChildren<WidgetAppProps>> = (props) => (\n  <CookieThemeProvider>\n    <Header headerActions={props?.headerActions}>{props.navigation}</Header>\n    <Main>{props.children}</Main>\n    <Footer />\n    {!!props.disableCookiesTooltip && <CookiesTooltip />}\n    {!!props.disableToasts && <ToastContainer />}\n  </CookieThemeProvider>\n)\n\nexport const EVMWidgetApp: FC<PropsWithChildren<WidgetAppEVMProps>> = (props) => (\n  <AppWagmiConfig {...props.wagmi}>\n    <ProviderWeb3 {...props.providerWeb3}>\n      <ProviderWalletModal {...props.reefKnot}>\n        <WidgetApp\n          navigation={props.navigation}\n          headerActions={props?.headerActions}\n          navigationLinks={props?.navigationLinks}\n          disableCookiesTooltip={props?.disableCookiesTooltip}\n          disableToasts={props?.disableToasts}\n        >\n          {props.children}\n        </WidgetApp>\n      </ProviderWalletModal>\n    </ProviderWeb3>\n  </AppWagmiConfig>\n)\n","export * from './appWagmiProvider'\n","import { FC, PropsWithChildren } from 'react'\nimport { getConnectors } from 'reef-knot/core-react'\nimport { WagmiConfig, createClient, configureChains, Chain, ChainProviderFn } from 'wagmi'\nimport * as wagmiChains from 'wagmi/chains'\nimport { CHAINS } from '@lido-sdk/constants'\nimport { getStaticRpcBatchProvider } from '@lido-sdk/providers'\n\nexport type AppWagmiConfigProps = {\n  defaultChain: CHAINS\n  supportedChains: CHAINS[]\n  backendRPC: Record<number, string>\n  getBackendRPCPath: (chainId: CHAINS) => string\n  walletconnectProjectId: string\n}\n\nconst wagmiChainsArray = Object.values(wagmiChains)\nlet defaultChain: Chain | undefined\nlet jsonRcpBatchProvider: ChainProviderFn\nlet supportedChains: Chain[]\nlet chains: Chain[]\nlet provider: ReturnType<typeof configureChains>['provider']\nlet webSocketProvider: ReturnType<typeof configureChains>['webSocketProvider']\nlet connectors: ReturnType<typeof getConnectors>\n// Here report: https://github.com/wagmi-dev/wagmi/issues/1164\n// Here fix https://github.com/wagmi-dev/wagmi/pull/1166\n// But not working\nlet client: any\n\nexport const AppWagmiConfig: FC<PropsWithChildren<AppWagmiConfigProps>> = (props) => {\n  if (!supportedChains) {\n    supportedChains = wagmiChainsArray.filter(\n      (chain: Chain) => props.supportedChains.includes(chain.id) || chain.id === 80001,\n    )\n  }\n\n  if (!defaultChain) {\n    defaultChain = wagmiChainsArray.find((chain: Chain) => chain.id === props.defaultChain)\n  }\n\n  if (!jsonRcpBatchProvider) {\n    jsonRcpBatchProvider = (chain: Chain) => ({\n      provider: () => getStaticRpcBatchProvider(chain.id, props.getBackendRPCPath(chain.id), undefined, 12000),\n      chain,\n    })\n  }\n\n  if (!chains || !provider || !webSocketProvider) {\n    const providers = configureChains(supportedChains, [jsonRcpBatchProvider])\n    chains = providers.chains\n    provider = providers.provider\n    webSocketProvider = providers.webSocketProvider\n  }\n\n  if (!connectors) {\n    connectors = getConnectors({\n      chains,\n      defaultChain,\n      rpc: props.backendRPC,\n      walletconnectProjectId: props.walletconnectProjectId,\n    })\n  }\n\n  if (!client) {\n    client = createClient({\n      connectors,\n      autoConnect: true,\n      provider,\n      webSocketProvider,\n    })\n  }\n\n  return <WagmiConfig client={client}>{props.children}</WagmiConfig>\n}\n"],"names":[],"version":3,"file":"index.js.map"}