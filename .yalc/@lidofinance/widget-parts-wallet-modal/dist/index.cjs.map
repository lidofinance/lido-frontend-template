{"mappings":"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","sources":["packages/widget-parts/wallet-modal/src/index.ts","packages/widget-parts/wallet-modal/src/walletModal.tsx","packages/widget-parts/wallet-modal/src/styles.tsx","packages/widget-parts/wallet-modal/src/providerWalletModal.tsx","packages/widget-parts/wallet-modal/src/context.ts","packages/widget-parts/wallet-modal/src/enums.ts","packages/widget-parts/wallet-modal/src/types.ts","packages/widget-parts/wallet-modal/src/hooks.ts"],"sourcesContent":["export { default as WalletModal } from './walletModal'\nexport { default as ProviderWalletModal } from './providerWalletModal';\nexport * from './enums';\nexport * from './types';\nexport * from './hooks';\n","import React, { FC, useCallback } from 'react'\nimport {\n  Address,\n  ButtonIcon,\n  Modal,\n  ModalProps,\n  Identicon,\n  External,\n  // Copy,\n} from '@lidofinance/lido-ui'\nimport { useEtherscanOpen, useSDK } from '@lido-sdk/react'\nimport { useConnectorInfo, useDisconnect } from '@reef-knot/web3-react'\n\n// import { useCopyToClipboard } from '@common/hooks';\n\nimport {\n  WalletModalContentStyle,\n  WalletModalConnectedStyle,\n  WalletModalConnectorStyle,\n  WalletModalDisconnectStyle,\n  WalletModalAccountStyle,\n  WalletModalAddressStyle,\n  WalletModalActionsStyle,\n} from './styles'\n\nconst WalletModal: FC<ModalProps> = (props) => {\n  const { onClose } = props\n  const { account } = useSDK()\n  const { providerName } = useConnectorInfo()\n  const { disconnect } = useDisconnect()\n\n  const handleDisconnect = useCallback(() => {\n    disconnect?.()\n    onClose?.()\n  }, [disconnect, onClose])\n\n  // const handleCopy = useCopyToClipboard(account ?? '');\n  const handleEtherscan = useEtherscanOpen(account ?? '', 'address')\n\n  return (\n    <Modal title=\"Account\" {...props}>\n      <WalletModalContentStyle>\n        <WalletModalConnectedStyle>\n          {providerName && <WalletModalConnectorStyle>Connected with {providerName}</WalletModalConnectorStyle>}\n\n          {disconnect && (\n            <WalletModalDisconnectStyle size=\"xs\" variant=\"outlined\" onClick={handleDisconnect}>\n              Disconnect\n            </WalletModalDisconnectStyle>\n          )}\n        </WalletModalConnectedStyle>\n\n        <WalletModalAccountStyle>\n          <Identicon address={account ?? ''} />\n          <WalletModalAddressStyle>\n            <Address address={account ?? ''} symbols={6} />\n          </WalletModalAddressStyle>\n        </WalletModalAccountStyle>\n\n        <WalletModalActionsStyle>\n          {/*<ButtonIcon*/}\n          {/*  onClick={handleCopy}*/}\n          {/*  icon={<Copy />}*/}\n          {/*  size=\"xs\"*/}\n          {/*  variant=\"ghost\"*/}\n          {/*>*/}\n          {/*  Copy address*/}\n          {/*</ButtonIcon>*/}\n          <ButtonIcon onClick={handleEtherscan} icon={<External />} size=\"xs\" variant=\"ghost\">\n            View on Etherscan\n          </ButtonIcon>\n        </WalletModalActionsStyle>\n      </WalletModalContentStyle>\n    </Modal>\n  )\n}\n\nexport default WalletModal\n","import { Button } from '@lidofinance/lido-ui'\nimport styled from 'styled-components'\n\nexport const WalletModalContentStyle = styled.div`\n  padding: ${({ theme }) => theme.spaceMap.lg}px;\n  background-color: var(--lido-color-background);\n  border-radius: ${({ theme }) => theme.borderRadiusesMap.lg}px;\n`\n\nexport const WalletModalConnectedStyle = styled.div`\n  display: flex;\n  align-items: center;\n`\n\nexport const WalletModalConnectorStyle = styled.div`\n  flex-grow: 1;\n  margin: ${({ theme }) => theme.spaceMap.sm}px 0;\n  margin-right: auto;\n  padding-right: ${({ theme }) => theme.spaceMap.md}px;\n\n  font-size: ${({ theme }) => theme.fontSizesMap.xxs}px;\n  line-height: 1.4em;\n  color: var(--lido-color-textSecondary);\n`\n\nexport const WalletModalDisconnectStyle = styled(Button)`\n  flex-shrink: 0;\n`\n\nexport const WalletModalAccountStyle = styled.div`\n  display: flex;\n  align-items: center;\n  margin: ${({ theme }) => theme.spaceMap.sm}px 0;\n`\n\nexport const WalletModalAddressStyle = styled.div`\n  margin-left: ${({ theme }) => theme.spaceMap.sm}px;\n\n  font-size: ${({ theme }) => theme.fontSizesMap.sm}px;\n  font-weight: 800;\n  line-height: 1.2em;\n`\n\nexport const WalletModalActionsStyle = styled.div`\n  margin: 0 ${({ theme }) => -theme.spaceMap.sm}px;\n  margin-top: ${({ theme }) => theme.spaceMap.md}px;\n\n  button {\n    margin-right: ${({ theme }) => theme.spaceMap.sm}px;\n    padding-left: ${({ theme }) => theme.spaceMap.sm}px;\n    padding-right: ${({ theme }) => theme.spaceMap.sm}px;\n  }\n`\n","import React, { useMemo, useCallback, memo, useState, FC, PropsWithChildren } from 'react'\nimport { WalletsModalForEth } from '@reef-knot/connect-wallet-modal'\nimport { useThemeToggle } from '@lidofinance/lido-ui'\n\nimport { ModalContext } from './context'\nimport { WALLET_MODAL } from './enums'\nimport { ProviderWalletModalProps } from './types'\nimport WalletModal from './walletModal'\n\nconst ProviderWalletModal: FC<PropsWithChildren<ProviderWalletModalProps>> = ({\n  children,\n  walletsMetrics,\n  hiddenWallets,\n}) => {\n  const [active, setActive] = useState<WALLET_MODAL | null>(null)\n  const { themeName } = useThemeToggle()\n\n  const openModal = useCallback((wModal: WALLET_MODAL) => {\n    setActive(wModal)\n  }, [])\n\n  const closeModal = useCallback(() => {\n    setActive(null)\n  }, [])\n\n  const value = useMemo(\n    () => ({\n      openModal,\n      closeModal,\n    }),\n    [closeModal, openModal],\n  )\n\n  const common = {\n    onClose: closeModal,\n    shouldInvertWalletIcon: themeName === 'dark',\n  }\n\n  return (\n    <ModalContext.Provider value={value}>\n      {children}\n      <WalletModal open={active === WALLET_MODAL.wallet} {...common} />\n      <WalletsModalForEth\n        open={active === WALLET_MODAL.connect}\n        metrics={walletsMetrics}\n        // Controlled exception!!!\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore\n        hiddenWallets={hiddenWallets}\n        {...common}\n      />\n    </ModalContext.Provider>\n  )\n}\n\nexport default memo<FC<PropsWithChildren<ProviderWalletModalProps>>>(ProviderWalletModal)\n","import { createContext } from 'react'\n\nimport { ContextWalletModalValue } from './types'\n\nexport const ModalContext = createContext({} as ContextWalletModalValue)\n","export enum WALLET_MODAL {\n  connect,\n  wallet,\n}\n","import { Metrics as WalletsMetrics } from '@reef-knot/connect-wallet-modal'\nimport { WALLET_MODAL } from './enums'\n\nexport type ProviderWalletModalProps = {\n  walletsMetrics: WalletsMetrics\n  hiddenWallets?: WalletId[]\n}\n\nexport type ContextWalletModalValue = {\n  openModal: (wModal: WALLET_MODAL) => void\n  closeModal: () => void\n}\n\n// Will be deprecated soon!!!\nexport const WALLET_IDS = {\n  METAMASK: 'Metamask',\n  WALLET_CONNECT: 'WalletConnect',\n  LEDGER: 'Ledger',\n  COINBASE: 'Coinbase',\n  TRUST: 'Trust',\n  IM_TOKEN: 'ImToken',\n  COIN98: 'Coin98',\n  MATH_WALLET: 'MathWallet',\n  TALLY: 'Tally',\n  AMBIRE: 'Ambire',\n  BLOCKCHAINCOM: 'Blockchain.com Wallet',\n  ZENGO: 'ZenGo',\n  BRAVE: 'Brave Wallet',\n  OPERA: 'Opera Wallet',\n  EXODUS: 'Exodus',\n  GAMESTOP: 'Gamestop',\n  XDEFI: 'Xdefi',\n  ZERION: 'Zerion',\n} as const\n\n// Will be deprecated soon!!!\nexport type WalletId = typeof WALLET_IDS[keyof typeof WALLET_IDS]\n","import { useCallback, useContext } from 'react';\nimport { ModalContext } from './context';\nimport { WALLET_MODAL } from './enums'\n\ntype UseModal = (wModal: WALLET_MODAL) => {\n  openModal: () => void;\n  closeModal: () => void;\n};\n\nexport const useModal: UseModal = (wModal) => {\n  const methods = useContext(ModalContext);\n\n  const openModal = useCallback(() => {\n    methods.openModal(wModal);\n  }, [methods, wModal]);\n\n  return {\n    openModal,\n    closeModal: methods.closeModal,\n  };\n};\n"],"names":[],"version":3,"file":"index.cjs.map"}