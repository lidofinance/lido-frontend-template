{"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AGAA;;;;AAMO,MAAM,4CAAuD,CAAC,QAAU;IAC7E,MAAM,QAAE,KAAI,YAAE,SAAQ,EAAE,GAAG,MAAM,GAAG;IAEpC,MAAM,EACJ,uCAAuC;IACvC,gFAAgF;IAChF,OAAO,OAAE,IAAG,SAAE,MAAK,EAAE,CAAA,EACtB,GAAG,CAAA,GAAA,gBAAQ;IAEZ,2EAA2E;IAC3E,gFAAgF;IAChF,gFAAgF;IAChF,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,eAAO,EAAE,KAAK;IAC5C,CAAA,GAAA,gBAAQ,EAAE,IAAM,WAAW,IAAI,GAAG,EAAE;IACpC,IAAI,CAAC,SAAS,OAAO,IAAI;IAEzB,IAAI,UACF,qBAAO,gBAAC;QAAE,QAAQ;QAAW,GAAG,KAAK;;IAGvC,MAAM,eAAe,IAAI;IAEzB,IAAI,KAAK,yBAAA,0BAAA,KAAA,IAAA,aAAc,GAAG,CAAC,OAAO;IAClC,IAAI,OAAO,yBAAA,0BAAA,KAAA,IAAA,aAAc,GAAG,CAAC,SAAS;IAEtC,MAAM,qBAAqB,aAAa,QAAQ;IAChD,MAAM,cAAc,qBAAqB,CAAC,CAAC,EAAE,mBAAmB,CAAC,GAAG,EAAE;IACtE,MAAM,gBAAgB,OAAO,CAAC,EAAE,YAAY,CAAC;IAG7C,qBAAO,gBAAC,CAAA,GAAA,eAAI,AAAD;QAAG,GAAG,IAAI;QAAE,MAAM;;AAC/B;;ADrCA;;;;;;;ADAA;;;ADAA","sources":["packages/next/ui-primitives/src/index.ts","packages/next/ui-primitives/src/components/index.ts","packages/next/ui-primitives/src/components/localLink/index.ts","packages/next/ui-primitives/src/components/localLink/localLink.tsx","packages/next/ui-primitives/src/components/localLink/types.ts"],"sourcesContent":["export * from './components'\n","export * from './localLink'\n","export * from './localLink'\nexport * from './types'\n","import React, { FC, useState, useEffect } from 'react'\nimport { useRouter } from 'next/router'\nimport Link from 'next/link'\n\nimport { LidoLinkProps } from './types'\n\nexport const LidoLink: FC<React.PropsWithChildren<LidoLinkProps>> = (props) => {\n  const { href, external, ...rest } = props\n\n  const {\n    // `ref` is needed for referral program\n    // `embed` is needed for support of `staking widget` via iframe in `ledger-live`\n    query: { ref, embed },\n  } = useRouter()\n\n  // Fix `Hydration failed...` when using `styled-component` with `next/link`\n  // https://github.com/vercel/next.js/discussions/35773#discussioncomment-2622885\n  // https://github.com/vercel/next.js/discussions/35773#discussioncomment-4166807\n  const [mounted, setMounted] = useState(false);\n  useEffect(() => setMounted(true), []);\n  if (!mounted) return null;\n\n  if (external) {\n    return <a target={'_blank'} {...props} />\n  }\n\n  const searchParams = new URLSearchParams()\n\n  if (ref) searchParams?.set('ref', ref as string)\n  if (embed) searchParams?.set('embed', embed as string)\n\n  const searchParamsString = searchParams.toString()\n  const queryString = searchParamsString ? `?${searchParamsString}` : ''\n  const pathWithQuery = href + `${queryString}`\n\n\n  return <Link {...rest} href={pathWithQuery} />\n}\n","import { LinkProps } from 'next/link'\n\nexport type LidoLinkProps = LinkProps & { href: string; external: boolean | undefined }\n"],"names":[],"version":3,"file":"index.mjs.map"}