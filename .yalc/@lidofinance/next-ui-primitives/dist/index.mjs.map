{"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AEAA;;;;AAMO,MAAM,4CAAuD,CAAC,QAAU;QAuBpE,mBACE;IAvBX,MAAM,QAAE,KAAI,EAAE,GAAG,MAAM,GAAG;IAE1B,MAAM,EACJ,uCAAuC;IACvC,gFAAgF;IAChF,OAAO,OAAE,IAAG,SAAE,MAAK,EAAE,CAAA,EACtB,GAAG,CAAA,GAAA,gBAAQ;IAEZ,2EAA2E;IAC3E,gFAAgF;IAChF,gFAAgF;IAChF,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,eAAO,EAAE,KAAK;IAC5C,CAAA,GAAA,gBAAQ,EAAE,IAAM,WAAW,IAAI,GAAG,EAAE;IACpC,IAAI,CAAC,SAAS,OAAO,IAAI;IACzB,qEAAqE;IAErE,MAAM,MAAM,IAAI,IAAI,MAAM,OAAO,QAAQ,CAAC,MAAM;IAEhD,IAAI,IAAI,MAAM,KAAK,OAAO,QAAQ,CAAC,MAAM,EACvC,qBAAO,gBAAC;QAAE,QAAQ;QAAW,GAAG,KAAK;QAAE,MAAM,IAAI,IAAI;;IAGvD,IAAI,KAAK,CAAA,oBAAA,IAAI,YAAY,cAAhB,+BAAA,KAAA,IAAA,kBAAkB,IAAI,OAAO;IACtC,IAAI,OAAO,CAAA,qBAAA,IAAI,YAAY,cAAhB,gCAAA,KAAA,IAAA,mBAAkB,IAAI,SAAS;IAE1C,qBAAO,gBAAC,CAAA,GAAA,eAAI,AAAD;QAAG,GAAG,IAAI;QAAE,MAAM,IAAI,IAAI;;AACvC;;ADjCA;;;ADAA","sources":["packages/next/ui-primitives/src/index.ts","packages/next/ui-primitives/src/components/index.ts","packages/next/ui-primitives/src/components/lidoLink/index.tsx"],"sourcesContent":["export * from './components'\n","export * from './lidoLink'\n","import React, { FC, useState, useEffect } from 'react'\nimport { useRouter } from 'next/router'\nimport Link, { LinkProps } from 'next/link'\n\nexport type LidoLinkProps = LinkProps & { href: string }\n\nexport const LidoLink: FC<React.PropsWithChildren<LidoLinkProps>> = (props) => {\n  const { href, ...rest } = props\n\n  const {\n    // `ref` is needed for referral program\n    // `embed` is needed for support of `staking widget` via iframe in `ledger-live`\n    query: { ref, embed },\n  } = useRouter()\n\n  // Fix `Hydration failed...` when using `styled-component` with `next/link`\n  // https://github.com/vercel/next.js/discussions/35773#discussioncomment-2622885\n  // https://github.com/vercel/next.js/discussions/35773#discussioncomment-4166807\n  const [mounted, setMounted] = useState(false)\n  useEffect(() => setMounted(true), [])\n  if (!mounted) return null\n  // Code below is only executed on the client side (due to line above)\n\n  const url = new URL(href, window.location.origin)\n\n  if (url.origin !== window.location.origin) {\n    return <a target={'_blank'} {...props} href={url.href} />\n  }\n\n  if (ref) url.searchParams?.set('ref', ref as string)\n  if (embed) url.searchParams?.set('embed', embed as string)\n\n  return <Link {...rest} href={url.href} />\n}\n"],"names":[],"version":3,"file":"index.mjs.map"}