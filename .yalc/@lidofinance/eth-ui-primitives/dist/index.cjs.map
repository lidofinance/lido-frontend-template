{"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AGAA;;AAKO,MAAM,4CAAoC,CAAC,QAAU;IAC1D,MAAM,UAAE,OAAM,UAAE,OAAM,UAAE,SAAS,KAAK,GAAE,GAAG,MAAM,GAAG;IACpD,MAAM,SAAS,CAAC,WAAU,mBAAA,oBAAA,KAAA,IAAA,OAAQ,MAAM,MAAK,KAAK,IAAI;IAEtD,qBACE,gEAAC;QAAM,GAAG,IAAI;kBACX;;AAIP;;ADfA;;;ADAA;;;ADAA;;;;;AKAA;AAEA,MAAM,eAAE,kCAAW,EAAE,GAAG,CAAA,GAAA,mBAAK,AAAD;AAC5B,MAAM,QAAE,2BAAI,EAAE,GAAG,CAAA,GAAA,uBAAS,AAAD;AAElB,MAAM,4CAA0B,CAAC,UAAU,0BAAI,EAAE,mBAAmB,CAAC,GAAa;IACvF,MAAM,SAAS,CAAA,GAAA,uBAAQ,EAAE,IAAI,CAAC,IAAI,GAAG,CAAC,KAAK,GAAG,CAAC,GAAG,KAAK;IACvD,OAAO,kCAAY,QAAQ,GAAG,CAAC,QAAQ,GAAG,CAAC;AAC7C;;ADRA;;","sources":["packages/eth/ui/primitives/src/index.ts","packages/eth/ui/primitives/src/components/index.ts","packages/eth/ui/primitives/src/components/formatToken/index.ts","packages/eth/ui/primitives/src/components/formatToken/formatToken.tsx","packages/eth/ui/primitives/src/utils/index.ts","packages/eth/ui/primitives/src/utils/formatEtherFloorBalance.ts"],"sourcesContent":["export * from './components'\nexport * from './utils'\n","export * from './formatToken'\n","export * from './formatToken'\n","import React from 'react'\n// import { formatEtherFloorBalance } from '../../utils'\nimport { FormatTokenComponent } from './types'\n\n// TODO: move to UI\nexport const FormatToken: FormatTokenComponent = (props) => {\n  const { amount, symbol, approx = false, ...rest } = props\n  const prefix = !approx || amount?.isZero() ? '' : '≈ '\n\n  return (\n    <span {...rest}>\n      {prefix}\n      {/*{formatEtherFloorBalance(amount)}&nbsp;{symbol}*/}\n    </span>\n  )\n}\n","export * from './formatEtherFloorBalance'\n","import { BigNumber, utils, constants } from 'ethers'\n\nconst { formatEther } = utils\nconst { Zero } = constants\n\nexport const formatEtherFloorBalance = (balance = Zero, maxDecimalDigits = 4): string => {\n  const modulo = BigNumber.from(10).pow(Math.max(0, 18 - maxDecimalDigits))\n  return formatEther(balance.sub(balance.mod(modulo)))\n}\n"],"names":[],"version":3,"file":"index.cjs.map"}